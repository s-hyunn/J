package Day0407;

class A{
	
	private int n;
	private String s;
	
	public A(int n,String s) {
		
	}
	
	public int getN() {
		return n;
	}
	public void setN(int n) {
		this.n = n;
	}
	public String getS() {
		return s;
	}
	public void setS(String s) {
		this.s = s;
	}
	
	
}

class B{
	private float f;
	private char c;
	
	public B(float f,char c) {
		
	}

	public float getF() {
		return f;
	}

	public void setF(float f) {
		this.f = f;
	}

	public char getC() {
		return c;
	}

	public void setC(char c) {
		this.c = c;
	}
}


public class Infinitytest {

	public static void main(String[] args) {
		//Object의 성격알기  - Object 클래스는 모든 클래스의 부모이다.
		//상속관계에서 자식들은 타입이 다를 수 있다.
		//타입이 다르다는건 배열을 만들 수 없다는 의미.
		//부모타입으로 선언한 배열에 자식 타입들이 들어갈 수 있다.
		//결과적으로 상속관계는 부모타입으로 서로 다른 자식 타입을 하나로 묶을 수 있다는 뜻.
		
		Object[] objs = new Object[3];
		objs[0] = "hello";
		
		A a =new A(1,"james");
		objs[1]=a;
		                //B b = new B(2.3f, 'B');
		objs[2]=new B(2.3f,'B'); 
		//배열이 이제 꽉 찼으니 새로운데이터를 넣기위해 더 큰 배열을 만들어야한다.
		Object[] temp = new Object[objs.length+3];
		temp[0]=objs[0];
		temp[1]=objs[1];
		temp[2]=objs[2];
		
		objs=temp;
		
		objs[3]="good";
		objs[4] =new A(2,"ann");
		objs[5]=new B(3.3f,'c');
		
		
//		
//		String s= (String) objs[0];
//		
//		int n= a.getN();
//		String name=a.getS();
//		
//		A ra=(A)objs[1]; //A타입으로 형변환 
//		ra.getN();
//		ra.getS();
		
		
	}

}
